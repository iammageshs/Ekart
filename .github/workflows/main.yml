name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: self-hosted  # Use the latest Ubuntu runner

    steps:
      - uses: actions/checkout@v3  # Checkout the repository
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: '3.8.5'
      - name: Cache SonarScanner
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven compile
        run: mvn clean compile -DskipTests=true
      - name: OWASP scan
        uses: gwen001/dependency-check-action@v2
        with:
          args: '--scan ./'
      - name: SonarQube analysis
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Required for GitHub integration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Required for SonarQube authentication
      - name: Maven build
        run: mvn clean package -DskipTests=true
      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: maxhunt/shopping-cart:latest
          secrets: |
            dockerhub-credentials=${{ secrets.DOCKERHUB_USERNAME }}
            dockerhub-credentials=${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Deploy to Docker
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
        run: docker run -d --name shop-shop -p 9070:9070 maxhunt/shopping-cart:latest
